// Generated by view binder compiler. Do not edit!
package com.example.carsevices.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.carsevices.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySecurityCodeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnupdatenewpass;

  @NonNull
  public final Button chkseccode;

  @NonNull
  public final EditText txtnewpass;

  @NonNull
  public final EditText txtseccode;

  private ActivitySecurityCodeBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnupdatenewpass, @NonNull Button chkseccode, @NonNull EditText txtnewpass,
      @NonNull EditText txtseccode) {
    this.rootView = rootView;
    this.btnupdatenewpass = btnupdatenewpass;
    this.chkseccode = chkseccode;
    this.txtnewpass = txtnewpass;
    this.txtseccode = txtseccode;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySecurityCodeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySecurityCodeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_security_code, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySecurityCodeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnupdatenewpass;
      Button btnupdatenewpass = ViewBindings.findChildViewById(rootView, id);
      if (btnupdatenewpass == null) {
        break missingId;
      }

      id = R.id.chkseccode;
      Button chkseccode = ViewBindings.findChildViewById(rootView, id);
      if (chkseccode == null) {
        break missingId;
      }

      id = R.id.txtnewpass;
      EditText txtnewpass = ViewBindings.findChildViewById(rootView, id);
      if (txtnewpass == null) {
        break missingId;
      }

      id = R.id.txtseccode;
      EditText txtseccode = ViewBindings.findChildViewById(rootView, id);
      if (txtseccode == null) {
        break missingId;
      }

      return new ActivitySecurityCodeBinding((ConstraintLayout) rootView, btnupdatenewpass,
          chkseccode, txtnewpass, txtseccode);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
